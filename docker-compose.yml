version: '3.8'

services:

  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=admin
    deploy:
      resources:
        limits:
          memory: 500M

  eureka:
    build:
      context: ./server/eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      TZ: "Asia/Oral"
    deploy:
      resources:
        limits:
          memory: 500M

  gateway:
    build:
      context: ./server/gateway
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    env_file:
      - ./server/gateway/.env
    environment:
      TZ: "Asia/Oral"
    deploy:
      resources:
        limits:
          memory: 500M

  security:
    build:
      context: ./server/admin-panel-security
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ./server/admin-panel-security/.env
    environment:
      TZ: "Asia/Oral"
    deploy:
      resources:
        limits:
          memory: 500M
#
#  project5:
#    build:
#      context: ./notification-proc
#      dockerfile: Dockerfile
#    ports:
#      - "8086:8086"
#    env_file:
#      - ./notification-proc/.env
#    environment:
#      TZ: "Asia/Oral"
#    deploy:
#      resources:
#        limits:
#          memory: 500M

#  storage:
#    build:
#      context: ./storage
#      dockerfile: Dockerfile
#    ports:
#      - "8082:8082"
#
#
#    environment:
#      TZ: "Asia/Oral"
#    deploy:
#      resources:
#        limits:
#          memory: 500M
#
#  websocket:
#    build:
#      context: ./app
#      dockerfile: Dockerfile
#    ports:
#      - "8084:8084"
#    env_file:
#      - ./app/.env
#    environment:
#      TZ: "Asia/Oral"
#    deploy:
#      resources:
#        limits:
#          memory: 500M
#
#  redis:
#    image: redis:6.0.7
#    container_name: redis
#    restart: always
#    volumes:
#      - redis_volume_data:/data
#    ports:
#      - "6379:6379"
#    deploy:
#      resources:
#        limits:
#          memory: 500M
#
#  redis_insight:
#    image: redislabs/redisinsight:1.14.0
#    container_name: redis_insight
#    restart: always
#    ports:
#      - "8009:8009"
#    volumes:
#      - redis_insight_volume_data:/db
#    deploy:
#      resources:
#        limits:
#          memory: 500M

volumes:
  redis_volume_data:
  redis_insight_volume_data:
  minio_data:
    driver: local
